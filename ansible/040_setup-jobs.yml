---
- hosts: localhost
  gather_facts: no

  vars:
   workflow_name: elk-demo Workflow Template
   jobs:
    - name: "delete GCE VMs"
      description: "deletes Google VMs"
      node_identifier: delete_GCEvms_node
      playbook: "ansible/loop_del.yml"
      credential: "GCE Service Account for elk-demo"
      credentials: 
        - "GCE Service Account for elk-demo"
      inventory: "Demo Inventory"
      #always_nodes: []
      #failure_nodes: []
      #success_nodes: []

    - name: "deploy ELK stack"
      description: "assure basic config and deploy and configure elastic, nginx, logstash"
      node_identifier: deploy_ELKstack_node
      playbook: "ansible/deploy_application.yml"
      credential: "VMs SSH Credential"
      credentials: 
        - "GCE Service Account for elk-demo"
        - "VMs SSH Credential"
        - "Vault Key"
        - "Twitter API Credential"
      inventory: "elk-demo Inventory"
      #always_nodes: []
      failure_nodes:
        - delete_GCEvms_node
      #success_nodes: []

    - name: "wait VMs"
      description: "wait for VMs to come up"
      node_identifier: wait_VMs
      playbook: "ansible/wait_vms.yml"
      credential: "GCE Service Account for elk-demo"
      credentials: 
        - "GCE Service Account for elk-demo"
      inventory: "Demo Inventory"
      #always_nodes: []
      failure_nodes:
        - delete_GCEvms_node
      success_nodes:
        - deploy_ELKstack_node

    - name: "create GCE VMs"
      description: "creates 2 Google VMs"
      node_identifier: create_GCEvms_node
      playbook: "ansible/loop.yml"
      credential: "GCE Service Account for elk-demo"
      credentials: 
        - "GCE Service Account for elk-demo"
      inventory: "Demo Inventory"
      #always_nodes: []
      failure_nodes:
        - delete_GCEvms_node
      success_nodes:
        - wait_VMs

   survey_spec:
    name: "ELK Stack Demo - Definition"
    description: "Parameters needed for the ELK Demo"
    spec: 
     - question_name: "Twitter Keyword"
       question_description: "Keyword we search for within all tweets"
       required: true
       type: "text"
       variable: "tw_keyword"

  tasks:
#  Note: both work awx.awx.tower_job_template or tower_job_template
#  awx version needs config file to not throw error, even though config file is empty.
#  non-awx version can only add single credential, but can do this repeatadly, by calling twice.
#  i go for awx version at the moment...
   - name: Create JobTemplate for {{ item.name }}
     awx.awx.tower_job_template:
       tower_config_file: files/empty.cfg
       tower_host: "{{ tower_host }}"
       tower_username: "{{ tower_user }}"
       tower_password: "{{ tower_password }}"
       validate_certs: no
       name: "{{ item.name }}"
       description: "{{ item.description }}"
       playbook: "{{ item.playbook }}"
       job_type: "run"
       inventory: "{{ item.inventory }}"
       project: "elk-demo"
       ## credential: "{{ item.credential }}"
       credentials: "{{ item.credentials }}"
       state: "present"
     loop: "{{ jobs }}"

# only needed as i wanted 2 credentials within one job_template and did not use the awx version...
#   - name: Create JobTemplate for deploy ELK stack
#     tower_job_template:
#       tower_host: "{{ tower_host }}"
#       tower_username: "{{ tower_user }}"
#       tower_password: "{{ tower_password }}"
#       validate_certs: no
#       name: "deploy ELK stack"
#       description: "assure basic config and deploy and configure elastic, nginx, logstash"
#       playbook: "ansible/deploy_application.yml"
#       job_type: "run"
#       inventory: "elk-demo Inventory"
#       project: "elk-demo"
#       credential: "Vault Key"
#       state: "present"



   - name: Get inventory id for GCE inventory
     uri:
       url: "{{ tower_base_url }}inventories/?name=elk-demo+Inventory"
       user: "{{ tower_user }}"
       password: "{{ tower_password }}"
       method: GET
       force_basic_auth: yes
       validate_certs: no
     register: inventory_object
   - name: Debug inventory ID
     debug:
        msg:  "Inventory ID is {{ inventory_object.json.results.0.id }}"

   - name: Create WorkflowTemplate 
##     tower_workflow_template:
     awx.awx.tower_workflow_job_template:
       tower_config_file: files/empty.cfg
       tower_host: "{{ tower_host }}"
       tower_username: "{{ tower_user }}"
       tower_password: "{{ tower_password }}"
       validate_certs: no

       name: "{{ workflow_name }}"
       description: Creates 2 GCE VMs and deploy ELK stack to analyse Twitter Tweets
       organization: Default
       inventory: "{{ inventory_object.json.results.0.id }}"
#       schema: "{{ lookup('file', 'my_workflow.json') }}"
       survey: "{{ survey_spec }}"
       survey_enabled: yes

   - name: Create delete GCE VMs node
     awx.awx.tower_workflow_job_template_node:
       tower_config_file: files/empty.cfg
       tower_host: "{{ tower_host }}"
       tower_username: "{{ tower_user }}"
       tower_password: "{{ tower_password }}"
       validate_certs: no

       identifier: "{{ item.node_identifier }}"
       workflow: "{{ workflow_name }}"
       unified_job_template: "{{ item.name }}"
       organization: Default
       success_nodes: "{{ item.success_nodes | default(omit) }}"
       always_nodes:  "{{ item.always_nodes  | default(omit) }}"
       failure_nodes: "{{ item.failure_nodes | default(omit) }}"
     loop: "{{ jobs }}"



